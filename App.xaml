<Application x:Class="Sport.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Sport"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <!-- Скролл бокс -->
        <Style x:Key="ScrollBarLineButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Canvas Height="18">
                            <Polygon Fill="#D93F36" Points="3,15 15,15 9,3"></Polygon>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarLineButtonBottomStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Canvas Height="18">
                            <Polygon Fill="#D93F36" Points="3,3 9,15 15,3"></Polygon>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border BorderBrush="Transparent"></Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Margin" Value="1,0,1,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}" >
                        <Rectangle Fill="#D93F36" Margin="2"></Rectangle>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition MaxHeight="18"/>
                </Grid.RowDefinitions>

                <RepeatButton Grid.Row="0" Height="18"
                          Style="{StaticResource ScrollBarLineButtonStyle}"
                          Command="ScrollBar.LineUpCommand" >
                </RepeatButton>
                <Track Name="PART_Track" Grid.Row="1" 
                   IsDirectionReversed="True">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                        </RepeatButton>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumbStyle}">
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                        </RepeatButton>
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="3" Height="18"
                          Style="{StaticResource ScrollBarLineButtonBottomStyle}"
                          Command="ScrollBar.LineDownCommand">
                </RepeatButton>
            </Grid>
        </ControlTemplate>

        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
        </Style>
        
        <!-- Прозрачные кнопки -->
        <Style BasedOn="{StaticResource {x:Type Button}}"
            TargetType="Button"
           x:Key="ButtonMenuTransparent">
            <Style.Setters>
                <Setter Property="Foreground" Value="#fafafa"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="Margin" Value="0 5 0 0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="#11000000" BorderBrush="#D93F36" BorderThickness="2">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>
                <!-- Триггер наведения -->
                <Trigger Property="Control.IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#ffffff"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="#01000000" BorderBrush="#da4b44" BorderThickness="2">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <!-- Триггер нажатия -->
                <Trigger Property="Button.IsPressed" Value="True">
                    <Setter Property="Foreground" Value="#c0c0c0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="#22000000" BorderBrush="#a43631" BorderThickness="2">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Текст в главном меню -->
        <Style BasedOn="{StaticResource {x:Type TextBlock}}"
            TargetType="TextBlock"
           x:Key="TextOnTitle">
            <Style.Setters>
                <Setter Property="Foreground" Value="#121010"/>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="20"/>
            </Style.Setters>
        </Style>

        <!-- Текст в соревнованиях -->
        <Style BasedOn="{StaticResource {x:Type TextBlock}}"
            TargetType="TextBlock"
           x:Key="TextOnComp">
            <Style.Setters>
                <Setter Property="Foreground" Value="#121010"/>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="FontSize" Value="14"/>
            </Style.Setters>
        </Style>

        <!-- Текст победителя -->
        <Style BasedOn="{StaticResource {x:Type TextBlock}}"
            TargetType="TextBlock"
           x:Key="TextWin">
            <Style.Setters>
                <Setter Property="Foreground" Value="#D93F36"/>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="14"/>
            </Style.Setters>
        </Style>

        <!-- Рамка стандартная -->
        <Style TargetType="Border"
           x:Key="StandartBorder">
            <Style.Setters>
                <Setter Property="BorderBrush" Value="#D93F36"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="CornerRadius" Value="3"/>
                <Setter Property="Margin" Value="5"/>
            </Style.Setters>
        </Style>

        <!-- Прозрачный текстбокс -->
        <Style BasedOn="{StaticResource {x:Type TextBox}}"
            TargetType="TextBox"
           x:Key="TransparentBox">
            <Style.Setters>
                <Setter Property="Foreground" Value="#121010"/>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border CornerRadius="3" Background="#fafafa" BorderBrush="#D93F36" BorderThickness="2">
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>
                <!-- Триггер наведения -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TextBox}">
                                <Border CornerRadius="3" Background="#dadada" BorderBrush="#da4b44" BorderThickness="2">
                                    <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <!-- Триггер фокуса -->
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TextBox}">
                                <Border CornerRadius="3" Background="#cacaca" BorderBrush="#a43631" BorderThickness="2">
                                    <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style BasedOn="{StaticResource TransparentBox}"
               TargetType="TextBox"
               x:Key="GroupOfCarBox">
            <Setter Property="HorizontalAlignment" Value="lef"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <!-- Комбобоксы -->

        <!-- Основной стиль комбобокса -->
        <!-- Стиль кнопки комбобокса -->
        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border" BorderBrush="#D93F36" CornerRadius="3" BorderThickness="2, 2, 2, 2" Background="#fafafa" />
                <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#D93F36" Name="ButtonBorder" CornerRadius="3, 3, 3, 3" BorderThickness="2, 2, 2, 2" Background="#fafafa" />
                <Path Name="Arrow" Grid.Column="1" Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" HorizontalAlignment="Center" Fill="#121010" VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="#fafafa"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#121010"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="#fafafa"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#D93F36"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="#fafafa"/>
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="#D93F36"/>
                    <Setter Property="TextElement.Foreground" Value="#121010"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!-- Стиль комбобокса -->
        <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="#121010"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2" ClickMode="Press" Focusable="False" IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Template="{StaticResource ComboBoxToggleButtonTemplate}"/>
                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False" HorizontalAlignment="Left" VerticalAlignment="Center" Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3" IsReadOnly="{TemplateBinding IsReadOnly}" Visibility="Hidden" Background="Transparent" HorizontalAlignment="Left" VerticalAlignment="Center" Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <Popup Name="Popup" Placement="Bottom" Focusable="False" AllowsTransparency="True" IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}" PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="#fafafa" Margin="0, 1, 0, 0" CornerRadius="3" BorderThickness="1,1,1,1"  BorderBrush="#D93F36"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <!-- Триггеры -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="#222020"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Дополнительный стиль комбобокса 1 -->
        <Style BasedOn="{StaticResource ComboBoxFlatStyle}"
            TargetType="ComboBox"
           x:Key="ComboTransparent">
            <Style.Setters>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="FontSize" Value="14"/>
            </Style.Setters>
        </Style>

        <!-- Стандартный пикер даты -->
        <Style BasedOn="{StaticResource {x:Type DatePicker}}"
            TargetType="DatePicker"
           x:Key="DatePickerStandart">
            <Style.Setters>
                <Setter Property="Foreground" Value="#121010"/>
                <Setter Property="Background" Value="#fafafa"/>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="CalendarStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type Calendar}">
                            <Setter Property="Background" Value="#fafafa" />
                            <Setter Property="Foreground" Value="#121010" />
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Resources>
                <ResourceDictionary>
                    <Style TargetType="DatePickerTextBox">
                        <Setter Property="Background" Value="#fafafa" />
                    </Style>
                </ResourceDictionary>
            </Style.Resources>
        </Style>
    </Application.Resources>
</Application>
